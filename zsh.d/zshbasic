#############################
# key bindings
#############################
# vi mode
bindkey -v
bindkey -M viins 'jj' vi-cmd-mode
bindkey '^P' history-beginning-search-backward
bindkey '^N' history-beginning-search-forward
# バックスペースキーで文字を削除する
bindkey -v '^?' backward-delete-char
# Shift-Tabで候補を逆順に補完する
bindkey '^[[Z' reverse-menu-complete

# vifm
bindkey -s '^f' 'tmux popup -w95% -h95% -E -d "#{pane_current_path}" vifm . \n'

# lazygit
bindkey -s '^gg' 'tmux popup -w95% -h95% -E -d "#{pane_current_path}" "lazygit"\n'
bindkey -s '^g^g' 'tmux popup -w95% -h95% -E -d "#{pane_current_path}" "lazygit"\n'

# today zle
today-for-zle() {
    local result=$(date +%Y-%m-%d)
    zle reset-prompt
    LBUFFER+=$result
}
zle -N today-for-zle
bindkey '^aday' today-for-zle

# command line zle
autoload -Uz edit-command-line
zle -N edit-command-line
bindkey "^o" edit-command-line

#############################
# setopt
#############################
# 入力したコマンドが存在せず、かつディレクトリ名と一致するなら、ディレクトリに cd する
# 例： /usr/bin と入力すると /usr/bin ディレクトリに移動
setopt auto_cd

# ↑を設定すると、 .. とだけ入力したら1つ上のディレクトリに移動できるので……
# 2つ上、3つ上にも移動できるようにする
alias ...='cd ../..'
alias ....='cd ../../..'

# cd した先のディレクトリをディレクトリスタックに追加する
# ディレクトリスタックとは今までに行ったディレクトリの履歴のこと
# `cd +<Tab>` でディレクトリの履歴が表示され、そこに移動できる
setopt auto_pushd
DIRSTACKSIZE=500
# pushd したとき、ディレクトリがすでにスタックに含まれていればスタックに追加しない
setopt pushd_ignore_dups

# 拡張 glob を有効にする
# glob とはパス名にマッチするワイルドカードパターンのこと
# （たとえば `mv hoge.* ~/dir` における "*"）
# 拡張 glob を有効にすると # ~ ^ もパターンとして扱われる
# どういう意味を持つかは `man zshexpn` の FILENAME GENERATION を参照
setopt extended_glob

# 入力したコマンドがすでにコマンド履歴に含まれる場合、履歴から古いほうのコマンドを削除する
setopt hist_ignore_all_dups

# コマンドがスペースで始まる場合、コマンド履歴に追加しない
# 例： <Space>echo hello と入力
setopt hist_ignore_space

# 単語の一部として扱われる文字のセットを指定する
# ここではデフォルトのセットから / を抜いたものとする
# こうすると、 Ctrl-W でカーソル前の1単語を削除したとき、 / までで削除が止まる
WORDCHARS='*?_-.[]~=&;!#$%^(){}<>'

# 補完候補を一覧で表示する
setopt auto_list

# 補完キー連打で候補順に自動で補完する
setopt auto_menu

# コマンド履歴に実行時間も記録する
setopt extended_history

# 直前と重複するコマンドを記録しない
setopt hist_ignore_dups

# コマンド中の余分なスペースは削除して履歴に記録する
setopt hist_reduce_blanks

# 履歴と重複するコマンドを記録しない
setopt hist_save_no_dups

# ^D でシェルを終了しない
setopt ignore_eof

# 履歴をすぐに追加する（通常はシェル終了時）
setopt inc_append_history

# '#' 以降をコメントとして扱う
setopt interactive_comments

# ビープを無効にする
setopt no_beep
setopt no_hist_beep
setopt no_list_beep

# = 以降も補完する（例：--option=value）
setopt magic_equal_subst

# バックグラウンド処理の状態変化をすぐに通知する
setopt notify

# 8bit文字を有効にする
setopt print_eight_bit

# 終了ステータスが0以外の場合にステータスを表示する
setopt print_exit_value

# VCS情報の表示を有効にする
setopt prompt_subst

# rm * の前に確認をとる
setopt rm_star_wait

# zsh間で履歴を共有する
setopt share_history

# コマンド実行後は右プロンプトを消す
setopt transient_rprompt

# URLをエスケープする
autoload -Uz url-quote-magic
zle -N self-insert url-quote-magic

#############################
# zsh hook
#############################
autoload -Uz add-zsh-hook

#############################
# completion setting
#############################
# コマンドのオプションや引数を補完する
autoload -Uz compinit && compinit -u

# 補完の表示方法を変更する
zstyle ':completion:*' completer _complete _match _approximate
zstyle ':completion:*' group-name ''
zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'
zstyle ':completion:*' use-cache true
zstyle ':completion:*' verbose yes
zstyle ':completion:*:default' menu select=2
zstyle ':completion:*:descriptions' format '%F{yellow}-- %d --%f'
zstyle ':completion:*:options' description 'yes'

# ---
# docker completion
# ---

fpath=(~/.zsh/completion $fpath)
zstyle ':completion:*:*:docker:*' option-stacking yes
zstyle ':completion:*:*:docker-*:*' option-stacking yes


#############################
# prompt setting
#############################

autoload -Uz vcs_info

setopt prompt_subst
zstyle ':vcs_info:git:*' check-for-changes true
zstyle ':vcs_info:git:*' stagedstr "%F{yellow}!"
zstyle ':vcs_info:git:*' unstagedstr "%F{red}+"
zstyle ':vcs_info:*' formats "%F{green}%c%u[%b]%f"
zstyle ':vcs_info:*' actionformats '[%b|%a]'

# 複数行のプロンプト
precmd () {
  # 1行あける
  print
  # カレントディレクトリ
  local left='%B%K{153}%{\e[38;5;18m%}(%~)%{\e[m%}%k%b'
  # バージョン管理されてた場合、ブランチ名
  vcs_info
  local right="%B%K{153} %{\e[38;5;32m%}${vcs_info_msg_0_}%{\e[m%}%k%b%B%K{153} %{\e[38;5;18m%}%DT%*%{\e[m%} %k%b"
  # スペースの長さを計算
  # テキストを装飾する場合、エスケープシーケンスをカウントしないようにする
  local invisible='%([BSUbfksu]|([FK]|){*})'
  local leftwidth=${#${(S%%)left//$~invisible/}}
  local rightwidth=${#${(S%%)right//$~invisible/}}
  local padwidth=$(($COLUMNS - ($leftwidth + $rightwidth) % $COLUMNS))

  print -P $left$right
}

PROMPT='%{$fg[green]%}$%{$reset_color%} '
TRAPALRM() {
  zle reset-prompt
}

#############################
# environmental values
#############################
export LANG=ja_JP.UTF-8
export EDITOR="nvim -u $HOME/.config/nvim/minimal.init.vim"

# dotfiles
export DOTFILES_DIR=$HOME/dotfiles
export PATH=$PATH:$DOTFILES_DIR/scripts
export PATH=$PATH:$HOME/mybin

# zsh
export HISTFILE=~/.zhistory
export HISTSIZE=100000
export SAVEHIST=1000000
export CLICOLOR=true
export LSCOLORS='exfxcxdxbxGxDxabagacad'
export LS_COLORS='di=34:ln=35:so=32:pi=33:ex=31:bd=36;01:cd=33;01:su=31;40;07:sg=36;40;07:tw=32;40;07:ow=33;40;07:'

# go
export GOPATH=$HOME/go
export GOBIN=$HOME/go/bin
export GO111MODULE=on
export PATH=$PATH:/usr/local/opt/go/libexec/bin
export PATH=$PATH:$GOPATH/bin
export PATH=$PATH:/usr/local/go/bin
export PATH=/opt/homebrew/opt/openssl@3/bin:$PATH
export GOCOMPE=$GOPATH/src/github.com/maguroguma/go-competitive

# yarn
export PATH=$HOME/.yarn/bin:$PATH
export PATH=$HOME/.config/yarn/global/node_modules/.bin:$PATH

# deno
export DENO_INSTALL=$HOME/.deno
export PATH=$DENO_INSTALL/bin:$PATH

#############################
# alias
#############################
# basic
alias v='nvim'
alias vi='nvim'
alias vim='nvim'
alias vimdiff='nvim -d'
alias rm='rm -i'
alias ..='cd ..'
alias mv='mv -i'
alias cp='cp -i'
alias c='clear'
alias relogin='exec $SHELL -l'
alias lined_path="echo $PATH | tr ':' '\n'"
if [ -e "$HOME/.zhistory" ]; then
    alias shell-history='cat $HOME/.zhistory | cut -b 16- | head -n 5000'
fi
alias hw='hostname;whoami'
alias rgf='rg --files-with-matches'
alias gr='go run'
alias enja='trans en:ja'
alias jaen='trans ja:en'

# Git
alias g='tmux popup -w95% -h95% -E -d "#{pane_current_path}" "lazygit"'
# add
alias ga='git add'
alias gau='git add -u'
# branch
alias gb='git branch'
alias gbD='git branch -D'
alias gba='git branch --all'
alias gbd='git branch --delete'
# checkout
alias gcho='git checkout'
# commit
alias gc='git commit'
alias gcm='git commit -m'
alias gcam='git commit --amend'
# config
alias gc-list='git config -l'
# diff
alias gd='git diff'
alias gdi='git diff --ignore-all-space --ignore-blank-lines --ignore-space-at-eol --ignore-space-change --color-moved-ws=allow-indentation-change'
alias gds='git diff --staged'
alias gdsi='git diff --staged --ignore-all-space --ignore-blank-lines --ignore-space-at-eol --ignore-space-change --color-moved-ws=allow-indentation-change'
# fetch
alias gf='git fetch'
alias gfp='git fetch --prune'
# grep
alias gg='git grep'
# log
alias glg='git log --graph --all --decorate'
alias glo='git log --oneline -n 30 --format="%C(green)%C(bold)%cd %C(auto)%h%d %s (%an)" --color=always --date=format:"%Y/%m/%d %H:%M:%S"'
# ls-files
alias gcheck-ignored='git ls-files -io --exclude-standard'
# merge
alias gm='git merge'
alias gms='git merge --squash'
# push
alias gpoH='git push origin HEAD'
# reset
alias gu='git reset HEAD'
# status
alias gs='git status --short'
# tag
alias gt='git tag'
alias gta='git tag -a'
alias gtd='git tag -d'
# submodule
alias gss='git submodule status'
alias gsa='git submodule add'
alias gsu='git submodule update'
alias gsur='git submodule update --recursive'
# worktree
alias gwa='git worktree add'
alias gwl='git worktree list'
alias gwp='git worktree prune'

# composite command
alias gcommit-only-deleted='git ls-files --deleted | xargs git commit'

# Docker
alias docker-restart='docker-compose down && docker-compose build && docker-compose up -d'

# tmux
alias ta='tmux a'
alias tks='tmux kill-server'
alias tls='tmux ls'
alias tns='tmux new -s'

# ubuntu
alias pbcopy='xsel --clipboard --input'
alias pbpaste='xsel --clipboard --output'
alias tmux-copy='tmux save-buffer - | pbcopy'
